{
  "name": "action-at-a-distance",
  "version": "1.0.0",
  "keywords": [
    "casperjs",
    "casper",
    "phantomjs",
    "spookyjs",
    "socket.io",
    "screen scraping"
  ],
  "author": {
    "name": "Eddie Gonzales",
    "email": "eddiemgonzales@gmail.com"
  },
  "description": "Use Socket.io to drive CasperJS",
  "main": "./server/actionatadistance.js",
  "dependencies": {
    "express": "3.0.0"
    , "mongoose": "3.5.5"
    , "socket.io": "~0.9.13"
    , "backbone": "~0.9.2"
    , "underscore": "~1.3.3"
    , "node-uuid": "1.4.0"
    , "spooky": "0.2.1"
  },
  "devDependencies": {
    "mocha": "1.3.x",
    "expect.js": "0.1.x",
    "cucumber": "*",
    "http-server": "0.5.x"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/egonz/action-at-a-distance.git"
  },
  "license": "MIT",
  "readme": "# ActionAtADistance\n\nA socket based Javascript screen scraping NodeJS module.\n\nUse [Socket.io](http://socket.io) to drive [CasperJS](http://casperjs.org/).\n Execute Javascript in a non-local page, and return nodes and parse them locally.\n\n## Install\n\n## Demos\n\nIncludes demos built with [Yeoman Express-Stack](https://github.com/yeoman/yeoman/tree/express-stack) and AngularJS. To run the demos:\n\n1. Install Yeoman Express-Stack\n 2. git clone https://github.com/egonz/action-at-a-distance.git; cd $_\n 2. npm install\n 3. yeomen server\n\n## NodeJS\n\n\tvar actionatadistance = require('actionatadistance').configure();\n \t...\n \tactionatadistance.start();\n \t...\n \tactionatadistance.stop();\n## Clientside Javascript\n\nJQuery, [LiveQuery](https://github.com/brandonaaron/livequery), and [html2canvas](http://html2canvas.hertzen.com/) (TODO) are injected into each page that are loaded. LiveQuery allows for processing of DOM elements loaded asynchronously adfter the page loads. html2canvas adds support for taking screen shots after page loads.\n\nExample:\n\n\tspookyActions.push('$(\'input[name="q"]\').val("CASPERJS");' +\n\t\t'$(\'button[name="btnK"]\').submit();');\n\tspookyActions.push('$("h3.r a").livequery(function() { ' +\n\t\t'var links=document.querySelectorAll("h3.r a");' +\n \t\t'links=Array.prototype.map.call(links,function(e){return e.getAttribute("href")});' +\n\t\t'var spookyResult = {data: links};' +\n\t\t'sendCallback(uuid, spookyResult);' +\n\t\t'});');\n\n\tgoogleActionAtADistance.onConnect(function() {\n\t\tgoogleActionAtADistance.start('http://www.google.com');\n\t});\n\n\tgoogleActionAtADistance.onDocumentLoaded(function(documentLocationHref) {\n\t\tloadSpookyAction(documentLocationHref);\n\t});\n\n\tgoogleActionAtADistance.onEvaluateResponse(function(data) {\n\t\tspooky = data.result;\n\t});\n\n\tfunction loadSpookyAction(documentLocationHref) {\n\t\tif (documentLocationHref === 'http://www.google.com') {\n\t\t\tspookyAction = spookyActions[0];\n\t\t} else if (documentLocationHref !== 'http://www.google.com') {\n\t\t\tspookyAction = spookyActions[1];\n\t\t}\n\t}\n\n",
  "readmeFilename": "README.md"
}
